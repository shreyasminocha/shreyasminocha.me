---
import renderInlineMarkdown from "../util/render-inline-md.ts";
import DateAndTags from "./DateAndTags.astro";

interface Props {
    link?: string;
    title: string;
    description?: string | undefined;
    date?: Date | undefined;
    tags?: string[] | undefined;
    level?: 1 | 2;
}

const { link, title, description, date, tags, level } = Astro.props;
const titleHtml = await renderInlineMarkdown(title);
---

<header>
    {
        (() => {
            const headingContent = link ? (
                <a href={link} set:html={titleHtml} />
            ) : (
                <Fragment set:html={titleHtml} />
            );

            return level === 2 ? (
                <h2>{headingContent}</h2>
            ) : (
                <h1>{headingContent}</h1>
            );
        })()
    }

    <DateAndTags {date} {tags} />

    {
        description ? (
            <p set:html={await renderInlineMarkdown(description)} />
        ) : (
            <Fragment />
        )
    }
</header>

<style define:vars={{ marginBottom: level === 1 ? "2em" : "1em" }}>
    header {
        margin-bottom: var(--marginBottom);
    }

    h1 a,
    h2 a {
        text-decoration: none;
    }

    h1,
    h2 {
        margin-bottom: 0.25em;
    }

    p {
        margin-top: 1em;
    }
</style>
